// import 'reflect-metadata';
// // workaround for https://github.com/angular/angular/issues/6007
// import Zone from 'zone.js';
// window.Zone = Zone;
/// <reference path="../typings/index.d.ts" />
"use strict";
var platform_browser_dynamic_1 = require('@angular/platform-browser-dynamic');
var router_deprecated_1 = require('@angular/router-deprecated');
var rootMenu_component_1 = require("./routerMenus/rootMenu/rootMenu.component");
//import {TransformToThreadD3node} from './viewThreadTreeElements/model/transformToThreadD3node'
//import {TransformJsonToThreadViewDataset} from './viewThreadTreeElements/model/transformJsonToThreadViewDataset';
//import {MapCreator} from './viewThreadTreeElements/model/mapCreator';
//import {TransformToThreadD3node} from './viewThreadTreeElements/model/TransformToThreadD3node';
//import {ThreadViewDatasetCreator} from './viewThreadTreeElements/model/threadviewDatasetCreator';
//import {KeyGenerator} from './service/keyGenerator/keyGenerator';
//import {JsonTransformationToken, JsonTransformationInterface} from '../../service/JsonTransformationService';
platform_browser_dynamic_1.bootstrap(rootMenu_component_1.RootMenuComponent, [router_deprecated_1.ROUTER_PROVIDERS,
]).
    catch(function (err) { return console.error(err); });

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkJBQTZCO0FBQzdCLG1FQUFtRTtBQUNuRSw4QkFBOEI7QUFDOUIsc0JBQXNCO0FBQ3RCLDhDQUE4Qzs7QUFFOUMseUNBQXdCLG1DQUFtQyxDQUFDLENBQUE7QUFDNUQsa0NBQStCLDRCQUMvQixDQUFDLENBRDBEO0FBQzNELG1DQUFnQywyQ0FBMkMsQ0FBQyxDQUFBO0FBSzVFLGdHQUFnRztBQUVoRyxtSEFBbUg7QUFDbkgsdUVBQXVFO0FBQ3ZFLGlHQUFpRztBQUNqRyxtR0FBbUc7QUFDbkcsbUVBQW1FO0FBQ25FLCtHQUErRztBQUcvRyxvQ0FBUyxDQUFDLHNDQUFpQixFQUFHLENBQUUsb0NBQWdCO0NBQzNDLENBQUM7SUFDRixLQUFLLENBQUMsVUFBQSxHQUFHLElBQUksT0FBQSxPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFsQixDQUFrQixDQUFDLENBQUMiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCAncmVmbGVjdC1tZXRhZGF0YSc7XHJcbi8vIC8vIHdvcmthcm91bmQgZm9yIGh0dHBzOi8vZ2l0aHViLmNvbS9hbmd1bGFyL2FuZ3VsYXIvaXNzdWVzLzYwMDdcclxuLy8gaW1wb3J0IFpvbmUgZnJvbSAnem9uZS5qcyc7XHJcbi8vIHdpbmRvdy5ab25lID0gWm9uZTtcclxuLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4uL3R5cGluZ3MvaW5kZXguZC50c1wiIC8+XHJcblxyXG5pbXBvcnQge2Jvb3RzdHJhcH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlci1keW5hbWljJztcclxuaW1wb3J0IHtST1VURVJfUFJPVklERVJTfSBmcm9tICdAYW5ndWxhci9yb3V0ZXItZGVwcmVjYXRlZCdcclxuaW1wb3J0IHtSb290TWVudUNvbXBvbmVudH0gZnJvbSBcIi4vcm91dGVyTWVudXMvcm9vdE1lbnUvcm9vdE1lbnUuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7Um91dGVDb25maWd9IGZyb20gXCJAYW5ndWxhci9yb3V0ZXItZGVwcmVjYXRlZFwiO1xyXG5pbXBvcnQge3Byb3ZpZGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge1RyYW5zZm9ybUpzb25Ub0xvZ2ljYWxTdHJlYW19IGZyb20gJy4vdmlld0VsZW1lbnRzL2RhdGEvdHJhbnNmb3JtSnNvblRvTG9naWNhbFN0cmVhbSc7XHJcbmltcG9ydCB7SnNvblRyYW5zZm9ybWF0aW9uSW50ZXJmYWNlLCBKc29uVHJhbnNmb3JtYXRpb25Ub2tlbn0gZnJvbSAnLi9zZXJ2aWNlL2pzb25UcmFuc2Zvcm1hdGlvblNlcnZpY2UnO1xyXG4vL2ltcG9ydCB7VHJhbnNmb3JtVG9UaHJlYWREM25vZGV9IGZyb20gJy4vdmlld1RocmVhZFRyZWVFbGVtZW50cy9tb2RlbC90cmFuc2Zvcm1Ub1RocmVhZEQzbm9kZSdcclxuXHJcbi8vaW1wb3J0IHtUcmFuc2Zvcm1Kc29uVG9UaHJlYWRWaWV3RGF0YXNldH0gZnJvbSAnLi92aWV3VGhyZWFkVHJlZUVsZW1lbnRzL21vZGVsL3RyYW5zZm9ybUpzb25Ub1RocmVhZFZpZXdEYXRhc2V0JztcclxuLy9pbXBvcnQge01hcENyZWF0b3J9IGZyb20gJy4vdmlld1RocmVhZFRyZWVFbGVtZW50cy9tb2RlbC9tYXBDcmVhdG9yJztcclxuLy9pbXBvcnQge1RyYW5zZm9ybVRvVGhyZWFkRDNub2RlfSBmcm9tICcuL3ZpZXdUaHJlYWRUcmVlRWxlbWVudHMvbW9kZWwvVHJhbnNmb3JtVG9UaHJlYWREM25vZGUnO1xyXG4vL2ltcG9ydCB7VGhyZWFkVmlld0RhdGFzZXRDcmVhdG9yfSBmcm9tICcuL3ZpZXdUaHJlYWRUcmVlRWxlbWVudHMvbW9kZWwvdGhyZWFkdmlld0RhdGFzZXRDcmVhdG9yJztcclxuLy9pbXBvcnQge0tleUdlbmVyYXRvcn0gZnJvbSAnLi9zZXJ2aWNlL2tleUdlbmVyYXRvci9rZXlHZW5lcmF0b3InO1xyXG4vL2ltcG9ydCB7SnNvblRyYW5zZm9ybWF0aW9uVG9rZW4sIEpzb25UcmFuc2Zvcm1hdGlvbkludGVyZmFjZX0gZnJvbSAnLi4vLi4vc2VydmljZS9Kc29uVHJhbnNmb3JtYXRpb25TZXJ2aWNlJztcclxuXHJcblxyXG5ib290c3RyYXAoUm9vdE1lbnVDb21wb25lbnQsICBbIFJPVVRFUl9QUk9WSURFUlMsICAgICAgICAgICAgXHJcbiAgICBdKS5cclxuICAgIGNhdGNoKGVyciA9PiBjb25zb2xlLmVycm9yKGVycikpO1xyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
